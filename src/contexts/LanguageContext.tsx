
import React, { createContext, useContext, useState, ReactNode } from 'react';

interface LanguageContextType {
  language: string;
  setLanguage: (lang: string) => void;
  t: (key: string) => string;
}

const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (!context) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
};

const translations = {
  pt: {
    dashboard: "Painel de Controle",
    reports: "Relatórios",
    regionalData: "Dados Regionais",
    about: "Sobre",
    showingOf: "Mostrando",
    of: "de",
    occurrences: "ocorrências",
    viewAll: "Ver Todos",
    typeId: "ID do Tipo",
    description: "Descrição",
    level: "Nível",
    totalOccurrences: "Total de Ocorrências",
    mostRecurringOccurrences: "Ocorrências Mais Recorrentes",
    mostFrequentTypes: "Tipos mais frequentes de ocorrências",
    filter: "Filtrar",
    filterByLevel: "Filtrar por Nível",
    critical: "Crítica",
    high: "Alta",
    medium: "Média",
    low: "Baixa",
    referenceCode: "Código de Referência",
    occurrencePercentage: "Esta ocorrência representa",
    ofTotalRecorded: "do total registrado",
    downloadSpreadsheet: "Baixar Planilha",
    accessAndExport: "Acesse e exporte os dados do sistema",
    availableReports: "Relatórios Disponíveis",
    accessSystemReports: "Acesse os relatórios gerados pelo sistema",
    reportID: "ID do Relatório",
    reportTitle: "Título do Relatório",
    reportDate: "Data do Relatório",
    reportType: "Tipo de Relatório",
    reportStatus: "Status do Relatório",
    reportAction: "Ação",
    monthlyAnalysis: "Análise Mensal de Ocorrências",
    monthly: "Mensal",
    available: "Disponível",
    download: "Baixar",
    downloadStarted: "Download iniciado!",
    allOccurrences: "Todas as Ocorrências",
    completeOccurrencesList: "Lista completa de todos os tipos de ocorrências registradas no sistema",
    backToDashboard: "Voltar ao Dashboard",
    dataTable: "Tabela de Dados",
    charts: "Gráficos",
    allOccurrenceTypes: "Todos os Tipos de Ocorrências",
    detailedOccurrenceData: "Dados detalhados de ocorrências por ano e tipo",
    distributionChart: "Gráfico de Distribuição",
    evolutionChart: "Gráfico de Evolução",
    occurrenceDistribution: "Distribuição de Ocorrências",
    distributionByType: "Distribuição percentual por tipo de ocorrência",
    yearlyEvolution: "Evolução Anual",
    evolutionOverYears: "Evolução das ocorrências ao longo dos anos",
    completeDetails: "Detalhes Completos",
    viewCompleteDetails: "Ver Detalhes Completos",
    // Tipos de ocorrências
    vehicleTheft: "Furto de Veículo",
    streetLightingIssue: "Problema de Iluminação Pública",
    trafficAccident: "Acidente de Trânsito",
    propertyInvasion: "Invasão de Propriedade",
    publicPropertyVandalism: "Vandalismo em Propriedade Pública",
    domesticViolence: "Violência Doméstica",
    drugTrafficking: "Tráfico de Drogas",
    noisePollution: "Poluição Sonora",
    publicPropertyDamage: "Dano ao Patrimônio Público",
    fraudAndScam: "Fraude e Golpe",
    illegalConstruction: "Construção Ilegal",
    waterLeakage: "Vazamento de Água",
    animalAbuse: "Maus-tratos a Animais",
    environmentalViolation: "Violação Ambiental",
    publicTransportIssue: "Problema no Transporte Público",
    roadDamage: "Dano na Via Pública",
    garbageIssue: "Problema com Lixo",
    sewerIssue: "Problema no Esgoto",
    publicSpaceOccupation: "Ocupação Irregular do Espaço Público",
    powerOutage: "Falta de Energia",
    internetOutage: "Falta de Internet",
    publicHealthIssue: "Problema de Saúde Pública",
    educationIssue: "Problema na Educação",
    total: "Total"
  },
  en: {
    dashboard: "Dashboard",
    reports: "Reports",
    regionalData: "Regional Data",
    about: "About",
    showingOf: "Showing",
    of: "of",
    occurrences: "occurrences",
    viewAll: "View All",
    typeId: "Type ID",
    description: "Description",
    level: "Level",
    totalOccurrences: "Total Occurrences",
    mostRecurringOccurrences: "Most Recurring Occurrences",
    mostFrequentTypes: "Most frequent types of occurrences",
    filter: "Filter",
    filterByLevel: "Filter by Level",
    critical: "Critical",
    high: "High",
    medium: "Medium",
    low: "Low",
    referenceCode: "Reference Code",
    occurrencePercentage: "This occurrence represents",
    ofTotalRecorded: "of the total recorded",
    downloadSpreadsheet: "Download Spreadsheet",
    accessAndExport: "Access and export system data",
    availableReports: "Available Reports",
    accessSystemReports: "Access system-generated reports",
    reportID: "Report ID",
    reportTitle: "Report Title",
    reportDate: "Report Date",
    reportType: "Report Type",
    reportStatus: "Report Status",
    reportAction: "Action",
    monthlyAnalysis: "Monthly Occurrence Analysis",
    monthly: "Monthly",
    available: "Available",
    download: "Download",
    downloadStarted: "Download started!",
    allOccurrences: "All Occurrences",
    completeOccurrencesList: "Complete list of all occurrence types recorded in the system",
    backToDashboard: "Back to Dashboard",
    dataTable: "Data Table",
    charts: "Charts",
    allOccurrenceTypes: "All Occurrence Types",
    detailedOccurrenceData: "Detailed occurrence data by year and type",
    distributionChart: "Distribution Chart",
    evolutionChart: "Evolution Chart",
    occurrenceDistribution: "Occurrence Distribution",
    distributionByType: "Percentage distribution by occurrence type",
    yearlyEvolution: "Yearly Evolution",
    evolutionOverYears: "Evolution of occurrences over the years",
    completeDetails: "Complete Details",
    viewCompleteDetails: "View Complete Details",
    // Occurrence types
    vehicleTheft: "Vehicle Theft",
    streetLightingIssue: "Street Lighting Issue",
    trafficAccident: "Traffic Accident",
    propertyInvasion: "Property Invasion",
    publicPropertyVandalism: "Public Property Vandalism",
    domesticViolence: "Domestic Violence",
    drugTrafficking: "Drug Trafficking",
    noisePollution: "Noise Pollution",
    publicPropertyDamage: "Public Property Damage",
    fraudAndScam: "Fraud and Scam",
    illegalConstruction: "Illegal Construction",
    waterLeakage: "Water Leakage",
    animalAbuse: "Animal Abuse",
    environmentalViolation: "Environmental Violation",
    publicTransportIssue: "Public Transport Issue",
    roadDamage: "Road Damage",
    garbageIssue: "Garbage Issue",
    sewerIssue: "Sewer Issue",
    publicSpaceOccupation: "Irregular Public Space Occupation",
    powerOutage: "Power Outage",
    internetOutage: "Internet Outage",
    publicHealthIssue: "Public Health Issue",
    educationIssue: "Education Issue",
    total: "Total"
  },
  es: {
    dashboard: "Panel de Control",
    reports: "Informes",
    regionalData: "Datos Regionales",
    about: "Acerca de",
    showingOf: "Mostrando",
    of: "de",
    occurrences: "ocurrencias",
    viewAll: "Ver Todos",
    typeId: "ID del Tipo",
    description: "Descripción",
    level: "Nivel",
    totalOccurrences: "Total de Ocurrencias",
    mostRecurringOccurrences: "Ocurrencias Más Recurrentes",
    mostFrequentTypes: "Tipos más frecuentes de ocurrencias",
    filter: "Filtrar",
    filterByLevel: "Filtrar por Nivel",
    critical: "Crítica",
    high: "Alta",
    medium: "Media",
    low: "Baja",
    referenceCode: "Código de Referencia",
    occurrencePercentage: "Esta ocurrencia representa",
    ofTotalRecorded: "del total registrado",
    downloadSpreadsheet: "Descargar Hoja de Cálculo",
    accessAndExport: "Acceda y exporte los datos del sistema",
    availableReports: "Informes Disponibles",
    accessSystemReports: "Acceda a los informes generados por el sistema",
    reportID: "ID del Informe",
    reportTitle: "Título del Informe",
    reportDate: "Fecha del Informe",
    reportType: "Tipo de Informe",
    reportStatus: "Estado del Informe",
    reportAction: "Acción",
    monthlyAnalysis: "Análisis Mensual de Ocurrencias",
    monthly: "Mensual",
    available: "Disponible",
    download: "Descargar",
    downloadStarted: "¡Descarga iniciada!",
    allOccurrences: "Todas las Ocurrencias",
    completeOccurrencesList: "Lista completa de todos los tipos de ocurrencias registradas en el sistema",
    backToDashboard: "Volver al Dashboard",
    dataTable: "Tabla de Datos",
    charts: "Gráficos",
    allOccurrenceTypes: "Todos los Tipos de Ocurrencias",
    detailedOccurrenceData: "Datos detallados de ocurrencias por año y tipo",
    distributionChart: "Gráfico de Distribución",
    evolutionChart: "Gráfico de Evolución",
    occurrenceDistribution: "Distribución de Ocurrencias",
    distributionByType: "Distribución porcentual por tipo de ocurrencia",
    yearlyEvolution: "Evolución Anual",
    evolutionOverYears: "Evolución de las ocurrencias a lo largo de los años",
    completeDetails: "Detalles Completos",
    viewCompleteDetails: "Ver Detalles Completos",
    // Tipos de ocurrencias
    vehicleTheft: "Robo de Vehículo",
    streetLightingIssue: "Problema de Alumbrado Público",
    trafficAccident: "Accidente de Tráfico",
    propertyInvasion: "Invasión de Propiedad",
    publicPropertyVandalism: "Vandalismo en Propiedad Pública",
    domesticViolence: "Violencia Doméstica",
    drugTrafficking: "Tráfico de Drogas",
    noisePollution: "Contaminación Acústica",
    publicPropertyDamage: "Daño al Patrimonio Público",
    fraudAndScam: "Fraude y Estafa",
    illegalConstruction: "Construcción Ilegal",
    waterLeakage: "Fuga de Agua",
    animalAbuse: "Maltrato Animal",
    environmentalViolation: "Violación Ambiental",
    publicTransportIssue: "Problema en Transporte Público",
    roadDamage: "Daño en Vía Pública",
    garbageIssue: "Problema con Basura",
    sewerIssue: "Problema en Alcantarillado",
    publicSpaceOccupation: "Ocupación Irregular del Espacio Público",
    powerOutage: "Corte de Energía",
    internetOutage: "Falta de Internet",
    publicHealthIssue: "Problema de Salud Pública",
    educationIssue: "Problema en Educación",
    total: "Total"
  }
};

export const LanguageProvider = ({ children }: { children: ReactNode }) => {
  const [language, setLanguage] = useState('pt');

  const t = (key: string): string => {
    return translations[language as keyof typeof translations]?.[key as keyof typeof translations['pt']] || key;
  };

  return (
    <LanguageContext.Provider value={{ language, setLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  );
};
